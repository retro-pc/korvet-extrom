Patcher Checker:
  ✔ восстановит скрипт который проверяет базу биосов на предмет патчера @done (14-10-22 22:21)
     
Stage2:
  ✔ добавть проверку на бред в инфосекторе @done (14-10-17 23:00)
    а то например de_3_00.kdi и kornet disk b - вешают загрузчик
    kwasti/hand.kdi
  ✔ default PALETTE @done (14-10-17 23:07)
  ☐ Определение конфигурации системы
    ☐ TechRef
      Масив переменных HW_XXXXX
      ✔ HW_ROM_*      - Определить тип ОПТС @done (14-10-19 00:54)
        оказалось что есть только 3 биоса с поддержкой EXTROM
        ОПТС1.1 ОПТС2.0 - всё понятно 
        КВАНТ8 - он ОПТС1
        и у него нет авто загузки из EXTROM
        только по F2+BOOT
        таким образом всё свелось к 3м вариантам
        ✔ HW_ROM_OPTS_CLASS 1/2 - Байт совместимости с DISK BIOS @done (14-10-19 00:54)
          ✔ совместимо с ОПТС 1  @done (14-10-19 00:49)
          ✔ совместимо с ОПТС 2 @done (14-10-19 00:49)
          x  Проверить используемые точки вход
            CHOUT/CHIN/KBDINT ?
        ✔ HW_ROM_MODEL enum - Байт с конкретным типом пзу (только известные типы)  @done (14-10-19 00:54)
          ✔ ОПТС 1.1, ОПТС 2, Контур, Терминал .... @done (14-10-19 00:54)
            КС 256 байт ??
      ✔ HW_GZU_PAGES  - Объем ГЗУ @done (14-10-19 02:41)
        тест соместить с граф лого ??
        или граф лого выводить только при 192к (чтоб на рушить 48к рамдиск ?)
        ✔ HW_GZU_PAGES - 1/2 (48/192)к @done (14-10-19 02:42)
        ✔ тест объема @done (14-10-19 02:42)
          3 байта для уверенности, т.к вдруг байт свопал
          Page 0 -> Write 3 last byte to 0x55 0xAA 0xFF
          Page 3 -> Read 3 last byte
      ☐ HW_FD*        - Дисководы
        ✔ HW_FDC_PRESENT 0/1 @done (14-10-19 22:51)
          флаг наличия контроллера дисководов
        ☐ HW_FDD_DRIVE_A,HW_FDD_DRIVE_B,HW_FDD_DRIVE_C,HW_FDD_DRIVE_D
          флаг присутствия физ дисковода
          посмотреть насколько это долго.
          ☐ опираясь на http://zxpress.ru/article.php?id=5069
             надо проверять на реале.
                  Как это работает: когда мы по-
                даем контроллеру  команду выхода
                на нулевую  дорожку, он пытается
                получить  от дисковода  подтвер-
                ждение  о  выполнении  операции.
                (сигнал 'головка в исходном сос-
                тоянии'  -  2_ой  бит порта #1F)
                Если дисковод подключен и голов-
                ка находится на нулевой дорожке,
                то контроллер сразу вырабатывает
                этот  сигнал,  а  если дисковода
                нет,  то  контроллер  не получит
                от дисковода подтверждения  и не
                будет  выдавать  сигнал подтвер-
                ждения, сигнализируя  о том, что
                команда  еще  не  выполнена. Ес-
                тественно,  проверка должна осу-
                ществляться при отключенном тур-
                бо режиме, если он у вас есть.
                  После  запуска программы будут
                по очереди загораться светодиоды
                дисководов.  На проверку каждого
                из  них  затрачивается  примерно
                1/25   секунды   если   дисковод
                подключен и около 1/2  в против-
                ном  случае, так что при провер-
                ке, перед обращением к следующе-
                му  дисководу,  неплохо  было бы
                выводить сообщение типа: "подож-
                дите, тестируется дисковод номер
                N",  чтобы пользователь не поду-
                мал, что программа зависла.
                  После тестирования, в соответ-
                ствующую   переменную  заносится
                нолик,  если устройство не обна-
                ружено или #28 при положительном
                результате.
                  На  этом  про определялки все.
                Возможно, в следующий раз я рас-
                скажу  вам о том, как определить
                параметры дисковода: кол-во сто-
                рон, дорожек, скорость перемеще-
                ния головок, и, быть может, даже
                фирму,  изготовившую  данную мо-
                дель. :-))
      ☐ HW_BOARD_TYPE - тип платы (канал 2 таймера)
        просто для информации
        определить как поключен канал 2 таймера 
    ✔ вывод информации при загрузке @done (14-10-19 22:51)
    ☐ маппинг на реальные FDD только если они присутсвуют
       ✔ пока только CP/M @done (14-10-22 00:28)
         в микродосе только эмулируемые диски
      ✔ на первом этапе - С & D тоже эмулируеммые если нет контроллера дисковода @done (14-10-22 00:28)
      ☐ после HW_FDD_DRIVE_A & co сделать реальный маппинг

  ☐ FallBack to default
    ☐ FallBack
      ☐ дать возможнось запустить несмотря на предупреждение
        ,R - run ANYWAY)?
      x отключить fallback после загрузки @done (14-10-16 11:59)
        не работает, 
        попробовал отключит subst после загрузки
        cpm явно что-то дочитывает после старта, а ему уже подменили биос
      ☐ навый параметр в subst
         как вариант, сделать в Subs режим когда он не подставляет 0й сектор
         точнее еще один параметр подставлять/нет 
    ✔ зависимость от системы @done (14-10-16 18:57)
      сейчас если произошел fallback в CPM из микродоса - вообще бред
      т.к. кол-во дорожек другое, и несоответвие
      как вариант от  
  ✔ mount @done (14-10-22 00:29)
    ✔ таблица ссылок на диски @done (14-10-22 00:29)
      ✔ сама таблица в резеденте @done (14-10-22 00:29)
      ✔ SELDSK support @done (14-10-19 22:54)
  ✔ включить fallback после загрузки  @done (14-10-17 23:12)
    ✔ спросить пользователя @done (14-10-17 00:11)
      Cтипа Вываливаемся в дефаулт CPM
      (Enter/Y - да, C - CPM, M - microdos) ?
  ✔ информация о маппинге из (таблица ссылок на диски) @done (14-10-22 00:29)
     ✔ если адрес батйта 0000 то не выводить @done (14-10-22 00:29)
        актуально для Микродос, т.к. там всего два диска 

CPM:
  ✔ выпилтьб поддержку перехвата клавиатуры @done (14-10-22 01:05)
    ибо стала неактуальна в связи с поддержкой диска F
  ✔ почему поломался диск E ???? @done (14-10-22 00:39)
    очень похоже что он и не работал
    ✔ проверить работал ли в старом патчере @done (14-10-22 00:39)
      неработал -проверил
  ✔ Увеличить место под резидент сейчас  @done (14-10-21 01:11)
    теперь два резидента, _CPM1_ & _CPM2_
    они обсолютно идентичны только разные почадочные места
    для CPM2 отдельный CSV
    теперь в cpm1 - 762 байт
    теперь в cpm2 - 1017
    было 416, и оставалось там 15 байт
    ---- 

    осталось 14 байт свободным
        ; вообще минимальная дырка 762 байта, 
        ; но тогда надо делать несколько резидентов для разных биосов
        ; всё портит 12_87_11_niijaf

        ; minimum hole_start .. min hole_end
        max_resident_cpm_len   equ   0xEBA6-0xEA06 ;=416
    ✔ сделать отдельную поддержку разных посадочных мест резидента? @done (14-10-21 01:11)
    ✔ 12_87_11_niijaf в одтельный темплейт @done (14-10-21 01:11)
      отдельная таблица cpm2 и отдельный резидент
  ☐ mount support
    ✔ таблица ссылок на диски @done (14-10-16 10:35)
    ✔ если нет FDC вообще посатвить флаги EMU @done (14-10-22 00:29)
    ☐ маппинг на реальные FDD только если они присутсвуют (relate to Stage2)
  ☐ диск F - образ с тулами
    ✔ related to (Увеличить место под резидент сейчас осталось 14 байт свободным) @done (14-10-21 01:15)
    x Копирование диска "с тулами" на диск E по комбинации клавиш
      выпилял поддержку клавиатуры
      ибо сделана номальная работа с диском F
    ✔ добавление еще одного диска F @done (14-10-21 14:10)
      ✔ код добавлен во все биосы  @done (14-10-21 01:17)
        добавлена все таблицы для диска F
      ✔ но пока не работает для биосов @done (14-10-21 02:01)
        CPM_12_88_3_niijaf
        CPM_1x_88_EPSON_V104
        CPM_1x_89_03_30_RAVI
        оказалось у них уникальные DirBUF
        0xDFDF  
        0xE1AB  
        0xE1AB  

        а у всех остальных 
        0xEBA6

        а он был забит гвоздями в биос
        починил -> новый patchvar _CPMx_DIR_BUF
      x почему не работает образ с mount!
          не работает даже в родном биосе
          лень разбираться
      ✔ заработало с обычным образом  @done (14-10-21 14:10)
        переделал "_emu_" теперь это просто обычный диск
        в биос тоже забиты параметры обычного диска 
        это гораздо удобнее чем спец формат.
    ☐ патч эму отправить
    ✔ патч для биоса от F32 для нового формата диска F @done (14-10-22 22:21)
    ✔ в чекер для F32 bios добавть чтоб он табличку парвильно инитил в для show info @done (14-10-22 22:21)
    ☐ приложить новый образ диска

MICRODOS:
  ✔  mdos2_880630.kdi вываливает в бейсик без дисковода @done (14-10-21 02:05)
       поламалась проверка ROM
       и вывалилвался т.к. грузлся в ОПТС2 а в ОПТС1 он выпадает в бейсик  
  ✔ SUBSTITUDED MICRODOS IMAGE @done (14-10-17 00:39)
    ✔ делаем из MICRODOS_OPTS2_900105 @done (14-10-16 19:01)
      ✔ вычисление адресс @done (14-10-16 18:51)
        адрес загрузки в память 0xBD80 это смещение между адрессом в дизасме и на диске
        т.е. если в памяти 0xF1D5 то на диске он 3455
      ✔ адресс где разместить копировщик резидента @done (14-10-16 18:51)
        (и минипатчер??)
        kdi:0x3455/RAM:0xF1D5 
      ✔ патч самого биоса @done (14-10-16 18:51)
          RAM:BED5          _BOOT2:                                 ; CODE XREF: RAM:BE7Bj
          RAM:BED5                                                  ; RAM:BE8Dj
          RAM:BED5 3E 20                    ld      a, 20h ; ' '
          RAM:BED7 32 3A FB                 ld      (_1C_PPI1C_Vireg), a
          RAM:BEDA FB                       ei
          RAM:BEDB CD B6 E4                 call    PCLS
          RAM:BEDE 21 4E F0                 ld      hl, BOOT_LOGO   ; "\x1BEdn=˜s( =d8020\r\neTT=¦s(fßv 01.05.90\r\n$"
          RAM:BEE1 CD 86 E4                 call    PUT_STR
          !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
          RAM:BEE4 C3 00 BF                 jp      loc_BF00        
          !!!!!!!!!!!!!!!!!!!!!

          0xBEE4 -> fdd:0x0164
          сюда ставим переход на нас, а там переход на BF00

          используем код из загрузчика
          RAM:BE9A 21 80 FC                 ld      hl, E_DRIVE
          RAM:BE9D 11 00 F1                 ld      de, E_DRIVE_IMAGE
          RAM:BEA0 0E D5                    ld      c, 213
          RAM:BEA2 CD 96 E4                 call    ldir_de_hl_c
          т.е. наш код это что-то типа
          call  0xE496
      ✔ скрипт инжектор @done (14-10-16 18:53)
          #!/bin/sh

          zmac -m kdi_resident.asm

          if [ $? -ne 0 ];then
           echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
           echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
           echo "!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!"
          else
            #0xf1d5
            /bin/echo -n -e \\xD5\\xf1 > startddr.bin
            cp 01_MICRODOS.KDI.src 01_MICRODOS.KDI
            #>>> 0x3455 -> 13397
            dd if=zout/kdi_resident.cim of=01_MICRODOS.KDI seek=13397 conv=notrunc bs=1
            #>>> 0x0165 -> 357
            dd if=startddr.bin of=01_MICRODOS.KDI seek=357 conv=notrunc bs=1
            #0x0e*1024=14336
            dd if=01_MICRODOS.KDI of=MICRODOS.BIN count=14336 bs=1
            rm startddr.bin
          fi
      ✔ на выходе @done (14-10-16 19:00)
        патч скрипт живет в generator/V0/kdi_substitude/
        там есть kdi_resident.asm который инклудит
        include "../out/patcher-microdos-MICRODOS_OPTS2_900105.asm"
        include "../extrom-patcher-resident-microdos.asm"
        т.е. он использует рабочий код
        в коде генерится патчер который на лету только патчит
        в итоге исходных изменения один JMP

        файл MICRODOS.BIN скопировать в extrom/ рядом с SYSTEM.BIN
        и 01_MICRODOS.KDI который можно использовать
        он нормально детектится патчером
  ✔ mount @done (14-10-17 23:40)
    ✔ таблица ссылок на диски @done (14-10-17 23:40)
      ✔ сама таблица в резеденте @done (14-10-17 23:40)
      ✔ SELDSK support @done (14-10-17 23:40)
  ☐ НАДО исправить код extrom для поддержки MICRODOS substitute
      для микродоса подставлять 3 дорожки а не 2
      возможно как параметр в вызов
      типа для 
        CPM - 2 
        MICRODOS - 3
          SYSTEMn - указано в параметрах
  ☐ resident
    ☐ address 0xFA00
      сейчас резидент расположен с 0xFA00 - это середина буфера чтения 0xF800-0xFBFF
      пока нет FDD всё ок, но надо это менять 
      
      был адресс 0xFD80, почему не устроил не помню
      вроде влазим пока в него ....
    ☐ исследовать резидент на 0xFD80
  ☐ диск F - образ с тулами
    ☐ пока только для MICRODOS_OPTS2_900105
      заодно запатчить его чтоб диск E работал и в ОПТС1
  ☐ дополнительные диски
    ☐ FDD A,B как реальные
    ☐ research
      ☐ E Drive
        ☐ jGetDPH_Addr:
          RAM:C01B C3 4C DD                 jp      SEL_DSK

          RAM:DD4C
          RAM:DD4C          SEL_DSK:                                ; CODE XREF: RAM:C01Bj
          RAM:DD4C                                                  ; sub_CD34+4p
          RAM:DD4C C5                       push    bc
          RAM:DD4D CD 0F E4                 call    j_jGetDPH_Addr
          RAM:DD50 C1                       pop     bc
          RAM:DD51 7D                       ld      a, l
          RAM:DD52 B4                       or      h
          RAM:DD53 C8                       ret     z
          RAM:DD54 79                       ld      a, c
          RAM:DD55 32 1B DF                 ld      (dsk_description.drive), a
          RAM:DD58 C9                       ret

          RAM:E40F          j_jGetDPH_Addr:                         ; CODE XREF: SEL_DSK+1p
          RAM:E40F C3 67 EA                 jp      jGetDPH_Addr

          RAM:EA67          jGetDPH_Addr:                           ; CODE XREF: j_jGetDPH_Addrj
          RAM:EA67 79                       ld      a, c
          RAM:EA68 21 33 E6                 ld      hl, DPH_A
          RAM:EA6B B7                       or      a
          RAM:EA6C CA 86 EA                 jp      z, do_FDDDiskInit
          RAM:EA6F 21 43 E6                 ld      hl, DPH_B
          RAM:EA72 3D                       dec     a
          RAM:EA73 CA 86 EA                 jp      z, do_FDDDiskInit
          RAM:EA76 FE 03                    cp      3
          RAM:EA78 C2 A1 EA                 jp      nz, ret0
          RAM:EA7B 3A F6 EE                 ld      a, (E_DRIVE_FLAG)
          RAM:EA7E B7                       or      a
          RAM:EA7F CA A1 EA                 jp      z, ret0
          RAM:EA82 21 60 F4                 ld      hl, DPH_E
          RAM:EA85 C9                       ret

          RAM:F44E C7 C7 C7+ALW_E:          db [ 12h ], 0C7h        
          RAM:F460 00 00 00+DPH_E:          DPH <0, 0, 0, 0, DIRBUF, dpb_E, sub_0, ALW_E>
          RAM:F460 00 00 00+                                        
          RAM:F470 80 00 03+dpb_E:          DPB <80h, 3, 7, 0, 8Fh, 1Fh, 80h, 0, 0, 0>
        ☐ Read/Write
          RAM:C027 C3 7B DD                 jp      do_READ
          RAM:C02A C3 78 DD                 jp      do_WRITE

          RAM:DD78          do_WRITE:                               ; CODE XREF: RAM:C02Aj
          RAM:DD78                                                  ; sub_CD9Dp
          RAM:DD78 3E 06                    ld      a, 6
          RAM:DD7A 21                       db 21h
          RAM:DD7B          do_READ:                                ; CODE XREF: RAM:C027j
          RAM:DD7B                                                  ; sub_CD97p
          RAM:DD7B 3E 04                    ld      a, 4
          RAM:DD7D 32 1D DF                 ld      (dsk_description.Fucntion), a
          RAM:DD80 21 1B DF                 ld      hl, dsk_description
          RAM:DD83 C3 12 E4                 jp      RW_DISK

          RAM:E412          RW_DISK:                                ; CODE XREF: RAM:D837j
          RAM:E412                                                  ; sub_D978+3Dp ...
          RAM:E412 C3 A5 EA                 jp      j_DSKIO

          RAM:EAA5          j_DSKIO:                                ; CODE XREF: RW_DISKj
          RAM:EAA5 3A 03 F7                 ld      a, (SysCOPY)
          RAM:EAA8 F5                       push    af
          RAM:EAA9 EB                       ex      de, hl
          RAM:EAAA 06 5C                    ld      b, 5Ch ; '\'
          RAM:EAAC CD 9F E4                 call    setSYSREG
          RAM:EAAF EB                       ex      de, hl
          RAM:EAB0 CD BF EA                 call    do_DSKIO
          RAM:EAB3 47                       ld      b, a
          RAM:EAB4 F1                       pop     af
          RAM:EAB5 F3                       di
          RAM:EAB6 32 7F FF                 ld      (_5C_SysReg1C), a
          RAM:EAB9 32 03 F7                 ld      (SysCOPY), a
          RAM:EABC FB                       ei
          RAM:EABD 78                       ld      a, b
          RAM:EABE C9                       ret

          RAM:EABF          do_DSKIO:                               ; CODE XREF: j_DSKIO+Bp
          RAM:EABF
          RAM:EABF          ; FUNCTION CHUNK AT RAM:EBA0 SIZE 0000009A BYTES
          RAM:EABF          ; FUNCTION CHUNK AT RAM:FC80 SIZE 00000095 BYTES
          RAM:EABF
          RAM:EABF 79                       ld      a, c
          RAM:EAC0 32 F7 EE                 ld      (DSK_IO_WriteType), a ; 0       (normal sector write)
          RAM:EAC0                                                  ; 1       (write to directory sector)
          RAM:EAC0                                                  ; 2       (write to the first sector of a new data block)
          RAM:EAC3 22 F8 EE                 ld      (DSC_IO_HL), hl ; DSCDESCR
          RAM:EAC6          ;
          RAM:EAC6 3A F6 EE                 ld      a, (E_DRIVE_FLAG)
          RAM:EAC9 A6                       and     (hl)            ; DRIVE?
          RAM:EACA FE 04                    cp      4
          RAM:EACC CA 80 FC                 jp      z, E_DRIVE
          RAM:EACF          ;
          RAM:EACF 7E                       ld      a, (hl)
          RAM:EAD0 FE 02                    cp      2
          RAM:EAD2 D2 07 EB                 jp      nc, invalidDrive

MOUNT:
  ☐ возможность замапить после загрузки(A->A, B->B, C,D->EMU)
    A -> FDD A
    B -> FDD B
    C -> EMU
    D -> EMU
    F -> EmuTools

    это позволить нормально работать с реальными дисками.
  ☐ Forth MOUNT
    ☐ микродосы
        dw  _BIOS_MICRODOS_OPTS1_861011 (mount говорит неопрелеленная карта памяти 0)
        dw  _BIOS_MICRODOS_OPTS1_861115
        dw  _BIOS_MICRODOS_OPTS1_870430
        работают в 0x5c
        надо учитывать что работаем в другой карте памяти

    ✔ если адрес = 0000 то диска нет и не предвидится @done (14-10-22 00:30)
      пока актуально для микродос

DONE:
    ✔ в патчере новый токен pB_MAYBE_PATCH @done (14-10-16 11:51)
     это патч байта если он вдруг совпадает
     а если нет - то не патчим
     т.е. не требуется чтобы проверочный байт ОБЯЗАТЕЛЬНО совпадал.
     
     это нужно чтобы патчить сообщение в биосе
     не дай бог его поменяли, если будет патч с чеком мы упадём
     хотя могли бы и работать
     а так модифицируем если смогли и хорошо
     самое стращное - пропустим очистку экрана - не особо страно  
